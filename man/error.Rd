% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error.R
\name{error}
\alias{error}
\title{Model error or loss}
\usage{
error(
  A,
  w,
  d = NULL,
  h,
  error_method = "mse",
  weights = NULL,
  h_L1 = 0,
  h_L2 = 0,
  h_PE = 0,
  w_L1 = 0,
  w_L2 = 0,
  w_PE = 0,
  parallel = TRUE
)
}
\arguments{
\item{A}{samples to project: matrix of features x samples, dense or sparse}

\item{w}{feature coefficients model: matrix of features x factors}

\item{d}{model diagonal (i.e. scaling matrix in NMF, singular values in SVD/PCA), or simply NULL or a vector of ones if no diagonal is included in the model. Default is NULL.}

\item{h}{sample coefficients model: matrix of factors x samples}

\item{error_method}{"mse" or "mae" for mean squared/absolute error}

\item{weights}{optional weights/maskings given as a vector of ncol(A), nrow(A), or a dense or sparse matrix of dim(A). Leave NULL for no weighting}

\item{h_L1}{L1/Lasso regularization on h}

\item{h_L2}{L2/Ridge regression on h}

\item{h_PE}{PE/pattern extraction regularization on h}

\item{w_L1}{L1/Lasso regularization on w}

\item{w_L2}{L2/Ridge regression on w}

\item{w_PE}{PE/pattern extraction regularization on w}

\item{parallel}{parallelize error loss calculation, applies only if "A" is dense. Generally if "A" is more than 90 percent sparse, it is always faster to simply leave "A" as sparse and take advantage of the (unparallelized) sparse matrix iterator in the RcppArmadillo backend.}
}
\value{
mean squared/absolute error
}
\description{
Mean squared or absolute error of a `wh` or `wdh` factorization. This measures how well a projection fits the model.
}
\details{
Loss is not simply the sum of all sample losses when regularizations are applied. Regularization penalties are added to the loss.
}
